<draftsman project-name="Demo" xmlns="https://tracepaper.draftsman.io">
    <events>
        <event name="DepositAccountingAccountRequested" authorization="authenticated" type="ActorEvent" graphql-name="deposit" graphql-namespace="Accounting.Account">
            <field name="emailAddress" type="String" />
            <field name="amount" type="Int" />
        </event>
        <event name="OpenAccountingAccountRequested" authorization="authenticated" type="ActorEvent" graphql-name="open" graphql-namespace="Accounting.Account">
            <field name="emailAddress" type="String" />
            <field name="balance" type="Int" />
        </event>
        <event name="WithdrawalAccountingAccountRequested" authorization="authenticated" type="ActorEvent" graphql-name="withdrawal" graphql-namespace="Accounting.Account">
            <field name="emailAddress" type="String" />
            <field name="amount" type="Int" />
        </event>
        <event name="AccountingAccountDeposited" source="Accounting.Account" type="DomainEvent">
            <field name="amount" type="Int" />
            <field name="eventDefinitionVersion" type="Int" />
        </event>
        <event name="AccountingAccountOpened" source="Accounting.Account" type="DomainEvent">
            <field name="emailAddress" type="String" />
            <field name="balance" type="Int" />
            <field name="eventDefinitionVersion" type="Int" />
        </event>
        <event name="AccountingAccountWithdraweld" source="Accounting.Account" type="DomainEvent">
            <field name="amount" type="Int" />
            <field name="eventDefinitionVersion" type="Int" />
        </event>
    </events>
    <domain>
        <subdomain name="Accounting">
            <aggregate name="Account">
                <field name="emailAddress" type="String" />
                <field name="balance" type="Int" />
                <command name="Deposit" create-command="false">
                    <trigger key-field="emailAddress" source="DepositAccountingAccountRequested">
                        <mapping value="emailAddress" target="emailAddress" />
                        <mapping value="amount" target="amount" />
                    </trigger>
                    <processor type="emit-event" ref="AccountingAccountDeposited">
                        <mapping target="amount" value="#flow.amount" />
                        <mapping target="eventDefinitionVersion" value="#1" />
                    </processor>
                    <test-case name="DepositTest" expected-processing-status="success" trigger-event="DepositAccountingAccountRequested" user="systemuser">
                        <input name="amount" type="Number" value="10" />
                        <input name="emailAddress" type="String" value="master.builder@draftsman.io" />
                        <expected domain-event="AccountingAccountDeposited">
                            <field name="amount" type="Number" value="10" />
                        </expected>
                    </test-case>
                </command>
                <command name="Open" create-command="true">
                    <trigger key-field="emailAddress" source="OpenAccountingAccountRequested">
                        <mapping value="emailAddress" target="emailAddress" />
                        <mapping value="balance" target="balance" />
                    </trigger>
                    <processor type="set-variable" expression="flow.balance + 10" name="balance" />
                    <processor type="emit-event" ref="AccountingAccountOpened">
                        <mapping target="emailAddress" value="#flow.emailAddress" />
                        <mapping target="balance" value="#flow.balance" />
                        <mapping target="eventDefinitionVersion" value="#1" />
                    </processor>
                    <test-case name="SignupBonusTest" expected-processing-status="success" trigger-event="OpenAccountingAccountRequested" user="systemuser">
                        <input name="balance" type="Number" value="10" />
                        <input name="emailAddress" type="String" value="master.builder@draftsman.io" />
                        <expected domain-event="AccountingAccountOpened">
                            <field name="balance" type="Number" value="20" />
                        </expected>
                    </test-case>
                </command>
                <command name="Withdrawal" create-command="false">
                    <trigger key-field="emailAddress" source="WithdrawalAccountingAccountRequested">
                        <mapping value="emailAddress" target="emailAddress" />
                        <mapping value="amount" target="amount" />
                    </trigger>
                    <processor type="emit-event" ref="AccountingAccountWithdraweld">
                        <mapping target="amount" value="#flow.amount" />
                        <mapping target="eventDefinitionVersion" value="#1" />
                    </processor>
                    <processor type="validator" condition="flow.entity.balance &gt;= 0" exception="Your balance can not be negative! Your current balance is {flow.entity.balance}" />
                    <test-case name="WithdrawalTest" expected-processing-status="success" trigger-event="WithdrawalAccountingAccountRequested" user="systemuser">
                        <input name="amount" type="Number" value="0" />
                        <input name="emailAddress" type="String" value="master.builder@draftsman.io" />
                        <expected domain-event="AccountingAccountWithdraweld">
                            <field name="amount" type="Number" value="0" />
                        </expected>
                    </test-case>
                </command>
                <event-handler on="AccountingAccountDeposited">
                    <mapping value="amount" target="balance" operand="add" condition="event.eventDefinitionVersion == 1" />
                </event-handler>
                <event-handler on="AccountingAccountOpened">
                    <mapping value="emailAddress" target="emailAddress" operand="set" condition="event.eventDefinitionVersion == 1" />
                    <mapping value="balance" target="balance" operand="set" condition="event.eventDefinitionVersion == 1" />
                </event-handler>
                <event-handler on="AccountingAccountWithdraweld">
                    <mapping value="amount" target="balance" operand="subtract" condition="event.eventDefinitionVersion == 1" />
                </event-handler>
            </aggregate>
        </subdomain>
    </domain>
    <views>
        <view name="Account">
            <field name="emailAddress" type="String" pk="true" />
            <field name="balance" type="Int" />
            <snapshot-handler sub-domain="Accounting" aggregate="Account" key-mapping="emailAddress" processor="item">
                <mapping target="balance" operand="set" value="balance" />
                <mapping target="emailAddress" operand="set" value="emailAddress" />
            </snapshot-handler>
            <query type="get" authorization="authenticated" field-name="get" graphql-namespace="Accounting.Account" />
        </view>
    </views>
    <notifiers>
        <notifier name="SendWelcomeEmail">
            <trigger source="AccountingAccountOpened">
                <mapping value="emailAddress" target="emailAddress" />
                <mapping value="balance" target="balance" />
            </trigger>
            <activity type="send-email" html="#flow.emailBody" receiver="#flow.emailAddress" sender="nr@demo.com" subject="#&quot;Welcome&quot;" text="#flow.emailBody" />
        </notifier>
        <notifier name="InitializeSystemUser">
            <trigger source="@afterDeployment">
                <mapping value="#'dummy'" target="dummy" />
            </trigger>
            <activity type="iam-create-systemuser" fail-silent="true" />
        </notifier>
    </notifiers>
</draftsman>